[{"line":1,"elements":[{"start_timestamp":"2024-11-08T12:13:21.430Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset1'","result":{"duration":1556600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.482 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1929000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.777 Running test for dataset:  Dataset1 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":22394000,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.804 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1000,\n\"VentOuterHeight\": 1500,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 747,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 30,\n\"HeightProfileRectangleAngle1\": 35,\n\"HeightProfileRectangleAngle2\": 2,\n\"RevealDepth\": 200,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 1000,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 15,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 29","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 29","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.65","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.65","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 747","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 747","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 65","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 65","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:21.820Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset2'","result":{"duration":2387000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.821 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1108800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.827 Running test for dataset:  Dataset2 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":2637400,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.831 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 3,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 501,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 96,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 38","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 38","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.11","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.11","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:21.843Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset3'","result":{"duration":1205100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.844 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":854600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.848 Running test for dataset:  Dataset3 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":3361500,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.852 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 3,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 500,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 30,\n\"HeightProfileRectangleAngle1\": 35,\n\"HeightProfileRectangleAngle2\": 2,\n\"RevealDepth\": 200,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 1000,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 15,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 38","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 38","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:21.864Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset4'","result":{"duration":860800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.866 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":2225900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.872 Running test for dataset:  Dataset4 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":2315300,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.875 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 4,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1342,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 2,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 29,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.13","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.13","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 84","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 84","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:21.887Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset5'","result":{"duration":1464300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.889 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":2195000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.893 Running test for dataset:  Dataset5 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1976900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.897 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 4,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1341,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 2,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 29,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.13","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.13","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 84","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 84","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:21.907Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset6'","result":{"duration":1244400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.909 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1213100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.913 Running test for dataset:  Dataset6 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":2648300,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.917 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 2500,\n\"VentOuterHeight\": 800,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 747,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 2,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 30,\n\"HeightProfileRectangleAngle1\": 35,\n\"HeightProfileRectangleAngle2\": 2,\n\"RevealDepth\": 200,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 1000,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 10","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 10","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.46","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.46","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 139","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 139","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 87","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 87","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:21.925Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset7'","result":{"duration":949800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.927 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1085100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.932 Running test for dataset:  Dataset7 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":2344200,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.935 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1650,\n\"VentOuterHeight\": 1500,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 1,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 0","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 0","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 1","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 1","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 102","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 102","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:21.943Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset8'","result":{"duration":1220100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.945 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":700700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.949 Running test for dataset:  Dataset8 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1707800,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.951 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 1,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 31","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 31","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.02","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.02","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:21.958Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset9'","result":{"duration":758100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.959 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":608300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.962 Running test for dataset:  Dataset9 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1229400,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.964 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 2,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 31","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 31","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.02","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.02","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:21.971Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset10'","result":{"duration":876600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.973 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":753700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.977 Running test for dataset:  Dataset10 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1698100,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.980 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 40,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 31","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 31","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.02","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.02","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:21.987Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset11'","result":{"duration":560900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:21.988 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":574100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:21.991 Running test for dataset:  Dataset11 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1360500,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:21.993 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 41,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 31","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 31","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.02","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.02","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset12'","result":{"duration":602600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.002 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":668000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.006 Running test for dataset:  Dataset12 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1415800,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.008 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 32,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 701,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.91","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.91","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 701","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 701","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.013Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset13'","result":{"duration":821600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.014 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":648100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.018 Running test for dataset:  Dataset13 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1044900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.020 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 33,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 701,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.91","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.91","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 701","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 701","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.026Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset14'","result":{"duration":1361500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.026 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":980500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.031 Running test for dataset:  Dataset14 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1408700,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.033 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 24,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 501,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 501","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 501","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.038Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset15'","result":{"duration":548600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.039 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":725600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.041 Running test for dataset:  Dataset15 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":2806100,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.045 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 25,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 501,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 501","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 501","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.050Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset16'","result":{"duration":1224400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.052 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":2218100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.058 Running test for dataset:  Dataset16 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1997000,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.060 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 13,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 501,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 501","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 501","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.067Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset17'","result":{"duration":914200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.067 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1253400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.070 Running test for dataset:  Dataset17 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":2502900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.074 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 14,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 501,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 501","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 501","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.080Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset18'","result":{"duration":459600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.081 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":791800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.083 Running test for dataset:  Dataset18 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1818700,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.085 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 60,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 75,\n\"HeightProfileRectangleAngle2\": 200,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 50,\n\"RevealDepthRectangleAngle2\": 1000,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.62","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.62","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.090Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset19'","result":{"duration":1149900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.091 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":658700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.095 Running test for dataset:  Dataset19 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1108100,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.096 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 14,\n\"OpeningType\": 3,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 275,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 35,\n\"BuildingDepth\": 65,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 200,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 38","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 38","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.102Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset20'","result":{"duration":647900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.103 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":854100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.105 Running test for dataset:  Dataset20 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1371200,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.107 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 14,\n\"OpeningType\": 3,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 275,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 10,\n\"HeightProfileRectangleAngle1\": 10,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 50,\n\"RevealDepthRectangleAngle1\": 300,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.49","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.49","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.110Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset21'","result":{"duration":980700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.112 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":540300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.115 Running test for dataset:  Dataset21 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":989000,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.116 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 7,\n\"OpeningType\": 4,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 800,\n\"VentOuterHeight\": 1600,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 120,\n\"SnowLoad\": 1035,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 13,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 50,\n\"BuildingDepth\": 100,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 10,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 10,\n\"RevealDepth\": 300,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 50,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 60","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 60","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.96","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.96","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 54","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 54","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.121Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset22'","result":{"duration":417900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.121 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":360600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.123 Running test for dataset:  Dataset22 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1095300,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.125 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 7,\n\"OpeningType\": 4,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 800,\n\"VentOuterHeight\": 1600,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 120,\n\"SnowLoad\": 1036,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 13,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 50,\n\"BuildingDepth\": 100,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 10,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 10,\n\"RevealDepth\": 300,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 50,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 60","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 60","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.96","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.96","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 54","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 54","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.129Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset23'","result":{"duration":507300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.129 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1042900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.132 Running test for dataset:  Dataset23 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":999000,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.135 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 7,\n\"OpeningType\": 4,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 750,\n\"VentOuterHeight\": 1500,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 13,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 50,\n\"BuildingDepth\": 100,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 10,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 10,\n\"RevealDepth\": 300,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 50,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 64","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 64","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.85","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.85","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 37","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 37","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.139Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset24'","result":{"duration":543400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.140 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":508300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.143 Running test for dataset:  Dataset24 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1053200,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.145 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 4000,\n\"VentOuterHeight\": 4000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 1200,\n\"WindLoad\": 1,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 1,\n\"ProfileWeightPerSerialMeter\": 1,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 40,\n\"HeightProfileRectangleAngle1\": 25,\n\"HeightProfileRectangleAngle2\": 200,\n\"RevealDepth\": 30,\n\"RevealDepthRectangleAngle1\": 75,\n\"RevealDepthRectangleAngle2\": 300,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 5.98","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 5.98","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 1200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 1200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 56","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 56","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.149Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset25'","result":{"duration":419500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.150 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":345800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.151 Running test for dataset:  Dataset25 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1336300,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.154 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 4000,\n\"VentOuterHeight\": 4000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 1,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 1,\n\"ProfileWeightPerSerialMeter\": 1,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 40,\n\"HeightProfileRectangleAngle1\": 25,\n\"HeightProfileRectangleAngle2\": 200,\n\"RevealDepth\": 30,\n\"RevealDepthRectangleAngle1\": 75,\n\"RevealDepthRectangleAngle2\": 300,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 11","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 11","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 4.05","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 4.05","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 56","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 56","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.157Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset26'","result":{"duration":439400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.158 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1017900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.160 Running test for dataset:  Dataset26 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":886900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.162 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 3,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 622,\n\"VentOuterHeight\": 1422,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 609,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 59","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 59","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.6","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.6","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 609","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 609","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 41","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 41","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.165Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset27'","result":{"duration":356800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.166 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":581000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.169 Running test for dataset:  Dataset27 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1329500,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.171 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 45,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 46,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.58","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.58","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.174Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset28'","result":{"duration":704500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.175 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":562200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.178 Running test for dataset:  Dataset28 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1186600,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.179 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": -45,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 46,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.08","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.08","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.183Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset29'","result":{"duration":358600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.184 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":440300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.185 Running test for dataset:  Dataset29 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1152300,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.187 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": -45,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1000,\n\"VentOuterHeight\": 2500,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 200,\n\"WindLoad\": 1,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 1,\n\"ProfileWeightPerSerialMeter\": 1,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 2,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 5","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 5","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.28","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.28","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 13","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 13","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.192Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset30'","result":{"duration":703600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.192 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1179500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.195 Running test for dataset:  Dataset30 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1241400,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.197 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 30,\n\"OpeningType\": 4,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1085,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 750,\n\"WindLoad\": 120,\n\"SnowLoad\": 880,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 4.5,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 87","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 87","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.33","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.33","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 750","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 750","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 58","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 58","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.200Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset31'","result":{"duration":357300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.201 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":400900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.204 Running test for dataset:  Dataset31 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1668600,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.205 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 5,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1200,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 1200,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 4.5,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 180","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 180","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.48","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.48","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 1200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 1200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 64","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 64","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.209Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset32'","result":{"duration":551100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.209 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":456100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.212 Running test for dataset:  Dataset32 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":985000,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.213 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 5,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 230,\n\"VentOuterHeight\": 500,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 1200,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 2,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 96,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 96","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 96","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.12","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.12","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 372","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 372","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 8","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 8","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.217Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset33'","result":{"duration":457500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.217 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":457700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.221 Running test for dataset:  Dataset33 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1378400,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.223 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 5,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 230,\n\"VentOuterHeight\": 650,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 1200,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 2,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 75,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 75","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 75","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.15","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.15","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 396","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 396","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 10","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 10","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.226Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset34'","result":{"duration":737700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.226 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":347700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.228 Running test for dataset:  Dataset34 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1909900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.231 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 45,\n\"OpeningType\": 5,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1500,\n\"VentOuterHeight\": 2100,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 22,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 2,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 96,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 11","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 11","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.44","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.44","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 191","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 191","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.235Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset35'","result":{"duration":1035700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.236 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":545500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.240 Running test for dataset:  Dataset35 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":986600,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.241 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 45,\n\"OpeningType\": 5,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1100,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 750,\n\"WindLoad\": 120,\n\"SnowLoad\": 2980,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 96,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 86","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 86","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.35","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.35","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 750","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 750","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 59","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 59","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.247Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset36'","result":{"duration":649000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.248 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1007500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.250 Running test for dataset:  Dataset36 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1858100,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.253 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1651,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 60,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 75,\n\"HeightProfileRectangleAngle2\": 200,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 50,\n\"RevealDepthRectangleAngle2\": 100,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 96,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.76","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.76","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 101","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 101","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.256Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset37'","result":{"duration":955600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.258 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":475700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.260 Running test for dataset:  Dataset37 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":858100,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.261 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 4,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 2100,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 47,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 2,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 75,\n\"BuildingDepth\": 100,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 96,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.76","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.76","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 383","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 383","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.265Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset38'","result":{"duration":427500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.265 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":434400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.268 Running test for dataset:  Dataset38 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1378400,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.270 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 5,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 2000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 2,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 30,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 74","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 74","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 2.15","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 2.15","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 1204","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 1204","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 102","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 102","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.275Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset39'","result":{"duration":1446300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.276 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":458400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.279 Running test for dataset:  Dataset39 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1560300,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.281 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 5,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 2000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 2,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 30,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 73,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 73","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 73","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 2.14","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 2.14","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 1190","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 1190","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 102","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 102","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.284Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset40'","result":{"duration":679000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.286 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":479400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.289 Running test for dataset:  Dataset40 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1084300,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.290 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 5,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 750,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 30,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 97","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 97","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.23","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.23","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 750","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 750","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 54","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 54","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.295Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset41'","result":{"duration":503300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.296 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":447200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.297 Running test for dataset:  Dataset41 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1897400,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.300 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 3,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1201,\n\"VentOuterHeight\": 1000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 30,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 30,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 1000,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.88","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.88","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 53","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 53","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.303Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset42'","result":{"duration":644700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.303 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":664600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.305 Running test for dataset:  Dataset42 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1366900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.308 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 3,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1201,\n\"VentOuterHeight\": 1000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 75,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 30,\n\"HeightProfileRectangleAngle1\": 35,\n\"HeightProfileRectangleAngle2\": 2,\n\"RevealDepth\": 200,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 1000,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 19","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.88","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.88","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 53","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 53","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.311Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset43'","result":{"duration":621900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.312 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1009300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.315 Running test for dataset:  Dataset43 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1286700,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.317 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1201,\n\"VentOuterHeight\": 1000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 2,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 2,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 23","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 23","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.37","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.37","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 53","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 53","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.321Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset44'","result":{"duration":442200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.322 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":359600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.324 Running test for dataset:  Dataset44 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":736200,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.325 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 4001,\n\"VentWeight\": 260,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 1201,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 4.92","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 4.92","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 1201","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 1201","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 260","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 260","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.328Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset45'","result":{"duration":474800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.329 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":386400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.331 Running test for dataset:  Dataset45 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1404400,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.333 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 27,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1300,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 700,\n\"WindLoad\": 76,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.92","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.92","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 700","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 700","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 81","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 81","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.338Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset46'","result":{"duration":423300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.338 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1215500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.341 Running test for dataset:  Dataset46 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":872500,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.343 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 5,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 62,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 450,\n\"WindLoad\": 121,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 62","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 62","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.346Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset47'","result":{"duration":1340800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.346 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":290900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.348 Running test for dataset:  Dataset47 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1303200,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.350 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 5,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 62,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 450,\n\"WindLoad\": 122,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 62","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 62","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.353Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset48'","result":{"duration":405600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.354 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":700900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.357 Running test for dataset:  Dataset48 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1497200,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.359 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 5,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 130,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 450,\n\"WindLoad\": 122,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 130","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 130","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.363Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset49'","result":{"duration":479900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.363 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":377600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.365 Running test for dataset:  Dataset49 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1059400,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.366 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 5,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 130,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 450,\n\"WindLoad\": 123,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 130","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 130","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.369Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset50'","result":{"duration":379700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.371 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":293900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.372 Running test for dataset:  Dataset50 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1118200,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.374 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 5,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 152,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 700,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 700","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 700","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 152","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 152","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.377Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset51'","result":{"duration":658300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.378 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":535900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.381 Running test for dataset:  Dataset51 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1862400,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.383 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 5,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 153,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 700,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 700","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 700","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 153","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 153","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.386Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset52'","result":{"duration":670000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.387 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":803400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.390 Running test for dataset:  Dataset52 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":927800,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.392 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 30,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 67,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 700,\n\"WindLoad\": 96,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 700","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 700","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.394Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset53'","result":{"duration":438000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.395 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":733700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.398 Running test for dataset:  Dataset53 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1655900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.400 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 30,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 67,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 700,\n\"WindLoad\": 97,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 150,\n\"HeightProfileRectangleAngle1\": 150,\n\"HeightProfileRectangleAngle2\": 150,\n\"RevealDepth\": 150,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 150,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 74,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 27","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 700","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 700","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 67","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.403Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset54'","result":{"duration":554500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.404 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":456700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.407 Running test for dataset:  Dataset54 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":866500,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.408 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 4,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1494,\n\"VentOuterHeight\": 2184,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 1000,\n\"WindLoad\": 120,\n\"SnowLoad\": 1150,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 26,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 2,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 26","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 26","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 3.26","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 3.26","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 1000","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 1000","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 230","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 230","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.413Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset55'","result":{"duration":407800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.413 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":421200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.415 Running test for dataset:  Dataset55 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1096000,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.416 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 5,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 450,\n\"WindLoad\": 102,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.420Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset56'","result":{"duration":465000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.421 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":595600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.423 Running test for dataset:  Dataset56 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1396900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.425 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 5,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1230,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 450,\n\"WindLoad\": 103,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 17","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.22","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 450","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 77","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.428Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset57'","result":{"duration":684000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.429 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1406200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.432 Running test for dataset:  Dataset57 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1415600,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.434 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1300,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 400,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 16","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.11","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.11","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 400","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 81","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 81","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.438Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset58'","result":{"duration":561300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.439 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":454000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.442 Running test for dataset:  Dataset58 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":852600,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.443 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 75,\n\"OpeningType\": 4,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1920,\n\"VentOuterHeight\": 1480,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 200,\n\"WindLoad\": 30,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 2,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 2,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 8","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 8","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.68","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.68","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 31","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 31","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.447Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset59'","result":{"duration":441900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.448 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":355400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.450 Running test for dataset:  Dataset59 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1148900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.451 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": -25,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1000,\n\"VentOuterHeight\": 1000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 500,\n\"WindLoad\": 275,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 29","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 29","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 500","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 500","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 45","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 45","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.456Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset60'","result":{"duration":649100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.457 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":903500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.460 Running test for dataset:  Dataset60 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":13434300,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.474 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 25,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1000,\n\"VentOuterHeight\": 1000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 500,\n\"WindLoad\": 261,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 29","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 29","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 500","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 500","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 45","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 45","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.478Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset61'","result":{"duration":466100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.481 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":812300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.483 Running test for dataset:  Dataset61 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1016900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.485 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 25,\n\"OpeningType\": 2,\n\"OpeningDirection\": 2,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1000,\n\"VentOuterHeight\": 1000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 500,\n\"WindLoad\": 260,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 29","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 29","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 500","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 500","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 45","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 45","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.489Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset62'","result":{"duration":396100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.490 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":531700,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.492 Running test for dataset:  Dataset62 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":919700,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.494 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 2000,\n\"VentOuterHeight\": 800,\n\"VentWeight\": 70,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 123,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 60","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 60","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.6","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.6","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 70","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 70","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.498Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset63'","result":{"duration":985000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.499 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":869300,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.503 Running test for dataset:  Dataset63 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1418400,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.504 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 20,\n\"OpeningType\": 4,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1300,\n\"VentOuterHeight\": 1400,\n\"VentWeight\": 76,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 1000,\n\"WindLoad\": 120,\n\"SnowLoad\": 1000,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 0,\n\"ProfileWeightPerSerialMeter\": 0,\n\"DrivePosition\": 2,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 42","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 42","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.82","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 1000","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 1000","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 76","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 76","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.509Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset64'","result":{"duration":421900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.510 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":672400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.512 Running test for dataset:  Dataset64 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":829200,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.513 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 5,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1000,\n\"VentOuterHeight\": 1000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 500,\n\"WindLoad\": 106,\n\"SnowLoad\": 1000,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 30,\n\"HeightProfileRectangleAngle1\": 35,\n\"HeightProfileRectangleAngle2\": 2,\n\"RevealDepth\": 200,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 1000,\n\"ChainLengthConnectingRodHandle\": 1,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 60","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 60","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 500","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 500","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 45","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 45","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.517Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset65'","result":{"duration":416800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.517 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":386800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.519 Running test for dataset:  Dataset65 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1199100,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.521 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 10,\n\"OpeningType\": 5,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1000,\n\"VentOuterHeight\": 2000,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 106,\n\"SnowLoad\": 1000,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 20,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 2,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 3,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 2,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 23","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 23","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 2","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 2","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 115","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 115","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.525Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset66'","result":{"duration":484800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.525 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":724800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.527 Running test for dataset:  Dataset66 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1726500,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.529 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1200,\n\"VentOuterHeight\": 1400,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 855,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.5,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 2,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 28.8,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 36","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 36","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 1.68","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 1.68","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 855","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 855","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 72","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 72","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.533Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset67'","result":{"duration":790600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.534 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":805800,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.538 Running test for dataset:  Dataset67 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1134600,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.540 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1202,\n\"VentOuterHeight\": 500,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 800,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 1,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.6,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 30,\n\"HeightProfileRectangleAngle1\": 35,\n\"HeightProfileRectangleAngle2\": 2,\n\"RevealDepth\": 200,\n\"RevealDepthRectangleAngle1\": 150,\n\"RevealDepthRectangleAngle2\": 1000,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 10,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 106","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 106","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 0.6","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 0.6","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 800","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 30","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 30","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.545Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset68'","result":{"duration":1680400,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.547 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":1112100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.552 Running test for dataset:  Dataset68 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1761900,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.554 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1201,\n\"VentOuterHeight\": 2500,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 855,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 2,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.7,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 55,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 55","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 55","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 3","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 3","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 2309","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 2309","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 125","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 125","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]},{"start_timestamp":"2024-11-08T12:13:22.559Z","line":220,"name":"Drivetec Configurations test","description":"","id":"drivetec-configurations-test","type":"scenario","keyword":"Scenario Outline","steps":[{"name":"def datasetName = 'Dataset69'","result":{"duration":500200,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6,"doc_string":{"content_type":"","value":"17:43:22.560 karate.env system property was: null \n","line":6}},{"name":"karate.log('Running test for dataset: ', datasetName)","result":{"duration":874100,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7,"doc_string":{"content_type":"","value":"17:43:22.562 Running test for dataset:  Dataset69 \n","line":7}},{"name":"def roundToNearestInt =","result":{"duration":1851000,"error_message":"js failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10,"doc_string":{"content_type":"","value":"function(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }17:43:22.564 classpath:drivetecTestCases\/features\/driveteclogin.feature:10\n* def roundToNearestInt =\n\"\"\"\nfunction(num) {\n  return Math.round(num);  # Round to the nearest integer\n  }\n\"\"\"\njs failed:\n>>>>\n01: (function(num) {\n02:   return Math.round(num);  # Round to the nearest integer\n03:   })\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:2:27 Expected an operand but found error\r\n  return Math.round(num);  # Round to the nearest integer\r\n                           ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:428)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1252)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2204)\n- com.intuit.karate.core.ScenarioEngine.evalKarateExpression(ScenarioEngine.java:2123)\n- com.intuit.karate.core.ScenarioEngine.evalAndCastTo(ScenarioEngine.java:1317)\n\nclasspath:drivetecTestCases\/features\/driveteclogin.feature:10\n","line":10}},{"name":"url apiUrl + '\/Configurations'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Given","line":35},{"name":"header Content-Type = 'application\/json'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":36},{"name":"request","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":37,"doc_string":{"content_type":"","value":"{\n\"Id\": \"8b11d2e1-fe65-46bb-82a6-4442277b52f2\",\n\"Name\": \"asdefgh\",\n\"Description\": \"\",\n\"ProjectId\": \"d2659447-79dd-4004-bdd8-aebda2f103db\",\n\"CustomTags\": \"\",\n\"CreatedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"ModifiedBy\": \"579816e4-6653-4794-b435-a885f32e28d7\",\n\"System\": \"\",\n\"FacadeInclination\": 0,\n\"OpeningType\": 1,\n\"OpeningDirection\": 1,\n\"OpeningWidth\": 1000,\n\"VentOuterWidth\": 1202,\n\"VentOuterHeight\": 2500,\n\"VentWeight\": 0,\n\"CalculateWeightWithGlass\": #(!CalculateWeightWithGlass),\n\"RequiredOpeningStroke\": 855,\n\"WindLoad\": 120,\n\"SnowLoad\": 0,\n\"IsWindowOpeningCalculationByAngle\": 2,\n\"GlassThickness\": 14,\n\"ProfileWeightPerSerialMeter\": 2.6,\n\"DrivePosition\": 1,\n\"InstallationPosition\": 0,\n\"LockingMechanism\": 1,\n\"Voltage\": 1,\n\"DriveType\": 1,\n\"TypeOfInstallation\": 2,\n\"GeometricArea\": 0,\n\"CalcVentilation\": 1,\n\"SpecificExhaustDimension\": 45,\n\"BuildingDepth\": 90,\n\"CalculationTypeForVentilation\": 1,\n\"HeightOfProfile\": 0,\n\"HeightProfileRectangleAngle1\": 0,\n\"HeightProfileRectangleAngle2\": 0,\n\"RevealDepth\": 0,\n\"RevealDepthRectangleAngle1\": 0,\n\"RevealDepthRectangleAngle2\": 0,\n\"ChainLengthConnectingRodHandle\": 5,\n\"ApplicationName\": 1,\n\"OpeningAngle\": 30,\n\"WeightIncGlassOrThickness\": #(!WeightIncGlassOrThickness),\n\"AkippOrAtilt\": 0,\n\"AdrehOrAturn\": 0,\n\"Ageo\": 0,\n\"MinPullingForceMax\": 0,\n\"MinPushingForceMax\": 0,\n\"MinPullingForcePermanent\": 0,\n\"MinPushingForcePermanent\": 0,\n\"ForceWithNegativeWind\": 0\n    }","line":37}},{"name":"method put","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"When","line":94},{"name":"status 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"Then","line":95},{"name":"def expectedOpeningAngle = 30","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"def actualOpeningAngle = response.OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":100},{"name":"def roundedOpeningAngle = roundToNearestInt(actualOpeningAngle)  # Apply rounding to OpeningAngle","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"match roundedOpeningAngle == 30","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":104},{"name":"def expectedAgeo = 3.01","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":107},{"name":"def actualAgeo = response.Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":108},{"name":"def roundedAgeo = roundToNearestInt(actualAgeo)  # Apply rounding to Ageo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":109},{"name":"match roundedAgeo == 3.01","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":112},{"name":"def expectedRequiredOpeningStroke = 1294","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"def actualRequiredOpeningStroke = response.RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":116},{"name":"def roundedRequiredOpeningStroke = roundToNearestInt(actualRequiredOpeningStroke)  # Apply rounding to RequiredOpeningStroke","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":117},{"name":"match roundedRequiredOpeningStroke == 1294","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":120},{"name":"def expectedVentWeight = 124","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"def actualVentWeight = response.VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":124},{"name":"def roundedVentWeight = roundToNearestInt(actualVentWeight)  # Apply rounding to VentWeight","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"match roundedVentWeight == 124","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"And","line":128}],"tags":[{"name":"@drivetec","line":3}]}],"name":"drivetecTestCases\/features\/driveteclogin.feature","description":"DriveTec Configurations","id":"drivetec-configurations","keyword":"Feature","uri":"drivetecTestCases\/features\/driveteclogin.feature"}]