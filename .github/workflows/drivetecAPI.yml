name: Drivetec API CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Java (JDK 17 in your case)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Step 3: Cache Maven dependencies to speed up builds
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Step 4: Build and Test with Maven
    - name: Build and Test with Maven
      run: mvn clean test -Dkarate.options="--tags @Configurations"

    # Step 5: Generate Allure Report using Maven Allure plugin
    - name: Generate Allure Report
      run: mvn allure:report

    # Step 6: Upload Allure test results as an artifact
    - name: Upload Allure Report
      uses: actions/upload-artifact@v3
      with:
        name: allure-test-report
        path: target/allure-results

    # Step 7: Deploy Allure Report to GitHub Pages
    - name: Deploy Allure Report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: target/allure-results
        publish_branch: gh-pages

    # Step 8: Configure GitHub Pages (Optional)
    # Ensure that GitHub Pages is configured to serve content from the `gh-pages` branch
